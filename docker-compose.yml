version: '3.4'

services:
  api:
    build: ./api
    ports:
      - 7080:7080
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      FILE_PATH: ${FILE_PATH}
    depends_on:
      - postgres
    networks:
      - backend
      - frontend
    volumes:
      - postgres-data:/Files/images

  webclient:
    build: ./web-client
    ports:
      - 8080:80
    depends_on:
      - api
    networks:
      - frontend

  cms:
    build: ./cms
    ports:
      - 8081:80
    depends_on:
      - api  
    networks:
      - frontend

  postgres:
    image: postgres:latest
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4:latest
    user: root
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - postgres
    volumes:
      - postgres-data:/var/lib/pgadmin
    networks:
      - backend
      
volumes:
  postgres-data:

networks:
  backend:
    internal: true
  frontend:
    driver: bridge
