# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

services:
  api:
    image: api
#    build:
#      dockerfile: ./api/Dockerfile
    ports:
      - 7080:7080
    environment:
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: admin@admin.com
      POSTGRES_PASSWORD: password
      POSTGRES_DATABASE: postgres
      PGADMIN_PORT: 6081
      PGADMIN_PASSWORD: password
      PGADMIN_EMAIL: admin@admin.com
    networks:
      - backend
      - frontend

  webclient:
    image: webclient
#    build:
#      context: .
#      dockerfile: ./web-client/Dockerfile
    ports:
      - 8080:80
    networks:
      - frontend

#  cms:
#    image: cms
#    build:
#      context: .
#      dockerfile: ./cms/Dockerfile
#    ports:
#      - 8081:8081
#    networks:
#      - frontend

  postgres:
    image: postgres:latest
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4:latest
    user: root
    depends_on:
      - postgres
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - postgres-data:/var/lib/pgadmin
    networks:
      - backend
      
volumes:
  postgres-data:

networks:
  backend:
    internal: true
  frontend: